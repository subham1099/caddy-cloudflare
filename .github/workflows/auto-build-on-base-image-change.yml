name: Auto Image Rebuild
on:
  schedule:
    - cron: "0 3 * * 1"
  workflow_dispatch:

env:
  GHCR_SLUG: ghcr.io/${{ github.repository }}

jobs:
  build-latest:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v7
          - linux/arm64/v8

    # https://github.com/docker/build-push-action
    # https://docs.docker.com/build/ci/github-actions/multi-platform/
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout Code Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # https://github.com/docker/metadata-action
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=auto
            prefix=
            suffix=
          images: |
            ${{ env.GHCR_SLUG }}
          tags: |
            type=raw,value=latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Regular Docker Image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: "${{ github.workspace }}"
          file: "Dockerfile"
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          outputs: type=image,"name=${{ env.GHCR_SLUG }}",name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  build-alpine:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v7
          - linux/arm64/v8

    # https://github.com/docker/build-push-action
    # https://docs.docker.com/build/ci/github-actions/multi-platform/
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout Code Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # https://github.com/docker/metadata-action
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=auto
            prefix=
            suffix=
          images: |
            ${{ env.GHCR_SLUG }}
          tags: |
            type=raw,value=latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Regular Docker Image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: "${{ github.workspace }}"
          file: "Dockerfile.alpine"
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          outputs: type=image,"name=${{ env.GHCR_SLUG }}",name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
